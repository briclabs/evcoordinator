buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.yaml:snakeyaml:1.33'
        classpath 'org.liquibase:liquibase-core:4.9.1'
        classpath 'org.liquibase:liquibase-gradle-plugin:2.1.1'
        classpath 'org.jooq:jooq-codegen:3.17.4'
        classpath 'org.jooq:jooq-meta-extensions-liquibase:3.17.4'
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.1.0'
    id 'nu.studer.jooq' version '8.0'
    id 'java-library'
    id 'idea'
}

apply plugin: 'java-library'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'liquibase'

group 'org.briclabs'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-gradle-plugin:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-jooq:3.0.0'
    implementation 'org.jooq:jooq-meta-extensions-liquibase:3.17.4'
    implementation 'org.liquibase:liquibase-gradle-plugin:2.1.1'
    implementation 'org.liquibase:liquibase-core:4.9.1'
    implementation 'org.postgresql:postgresql:42.5.1'
    implementation 'org.jooq:jooq:3.17.4'
    implementation 'org.jooq:jooq-meta:3.17.4'
    implementation 'org.jooq:jooq-codegen:3.17.4'

    jooqGenerator 'org.postgresql:postgresql:42.5.1'
    jooqGenerator 'org.liquibase:liquibase-core:4.9.1'
    jooqGenerator 'org.jooq:jooq-meta-extensions-liquibase:3.17.4'
    jooqGenerator 'org.springframework.boot:spring-boot-starter-jdbc:3.0.0'
    jooqGenerator(files("src/main/resources"))

    testImplementation 'org.testng:testng:7.7.0'
}

tasks.named('test') {
    useTestNG()
}

import org.jooq.meta.jaxb.Logging

jooq {
    configurations {
        main {
            generationTool {
                logging = Logging.INFO
                generator {
                    name = 'org.jooq.codegen.JavaGenerator'
                    database {
                        name = 'org.jooq.meta.extensions.liquibase.LiquibaseDatabase'
                        properties {
                            property {
                                key = 'scripts'
                                value = 'db/changelog/db.changelog-master.yaml'
                            }
                        }
//                        forcedTypes {
//                            forcedType {
//                                name = 'varchar'
//                                includeExpression = '.*'
//                                includeTypes = 'JSONB?'
//                            }
//                            forcedType {
//                                name = 'varchar'
//                                includeExpression = '.*'
//                                includeTypes = 'INET'
//                            }
//                        }
                    }
                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                    }
                    target {
                        directory = 'src/main/java/'
                        packageName = 'net.briclabs.evcoordinator.generated'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}